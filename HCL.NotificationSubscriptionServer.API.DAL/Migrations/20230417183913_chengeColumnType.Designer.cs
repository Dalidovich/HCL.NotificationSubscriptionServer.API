// <auto-generated />
using System;
using HCL.NotificationSubscriptionServer.API.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HCL.NotificationSubscriptionServer.API.DAL.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230417183913_chengeColumnType")]
    partial class chengeColumnType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HCL.NotificationSubscriptionServer.API.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pk_notification_id");

                    b.Property<string>("ArticleId")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("article_id");

                    b.Property<Guid>("RelationshipId")
                        .HasColumnType("uuid")
                        .HasColumnName("fk_relationship_id");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("RelationshipId");

                    b.ToTable("notifications", (string)null);
                });

            modelBuilder.Entity("HCL.NotificationSubscriptionServer.API.Domain.Entities.Relationship", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("pk_relationship_id");

                    b.Property<Guid>("AccountMasterId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_master_id");

                    b.Property<Guid>("AccountSlaveId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_slave_id");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("relationship_status");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("relationships", (string)null);
                });

            modelBuilder.Entity("HCL.NotificationSubscriptionServer.API.Domain.Entities.Notification", b =>
                {
                    b.HasOne("HCL.NotificationSubscriptionServer.API.Domain.Entities.Relationship", "Relationship")
                        .WithMany("notifications")
                        .HasForeignKey("RelationshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Relationship");
                });

            modelBuilder.Entity("HCL.NotificationSubscriptionServer.API.Domain.Entities.Relationship", b =>
                {
                    b.Navigation("notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
